CREATE TABLE dm_area (id INTEGER PRIMARY KEY AUTOINCREMENT, dm_layout_id INTEGER, dm_page_view_id INTEGER, type VARCHAR(255) DEFAULT 'content' NOT NULL);
CREATE TABLE dm_auto_seo_translation (id INTEGER, slug VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, title VARCHAR(255) NOT NULL, h1 VARCHAR(255), description VARCHAR(255), keywords VARCHAR(255), strip_words VARCHAR(10000), lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE dm_auto_seo (id INTEGER PRIMARY KEY AUTOINCREMENT, module VARCHAR(127) NOT NULL, action VARCHAR(127) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_catalogue (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) NOT NULL, source_lang VARCHAR(15) NOT NULL, target_lang VARCHAR(15) NOT NULL);
CREATE TABLE dm_contact (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, body LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_error (id INTEGER PRIMARY KEY AUTOINCREMENT, klass VARCHAR(127) NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(60000), module VARCHAR(127), action VARCHAR(127), uri VARCHAR(255) NOT NULL, env VARCHAR(63) NOT NULL, created_at DATETIME NOT NULL);
CREATE TABLE dm_group (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) UNIQUE, description VARCHAR(1000), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_group_permission (dm_group_id INTEGER, dm_permission_id INTEGER, PRIMARY KEY(dm_group_id, dm_permission_id));
CREATE TABLE dm_layout (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) NOT NULL UNIQUE, template VARCHAR(255) DEFAULT 'page' NOT NULL, css_class VARCHAR(255));
CREATE TABLE dm_lock (id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, user_name VARCHAR(255) NOT NULL, module VARCHAR(127) NOT NULL, action VARCHAR(127) NOT NULL, record_id INTEGER UNSIGNED DEFAULT 0 NOT NULL, time INTEGER NOT NULL, app VARCHAR(127) NOT NULL, url VARCHAR(255) NOT NULL, culture VARCHAR(15) NOT NULL);
CREATE TABLE dm_mail_template_translation (id INTEGER, description VARCHAR(5000), title VARCHAR(5000), body LONGTEXT, from_email VARCHAR(5000), to_email VARCHAR(5000), is_html INTEGER DEFAULT '0' NOT NULL, is_active INTEGER DEFAULT '1' NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE dm_mail_template (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) NOT NULL UNIQUE, vars VARCHAR(5000), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_media (id INTEGER PRIMARY KEY AUTOINCREMENT, dm_media_folder_id INTEGER NOT NULL, file VARCHAR(255) NOT NULL, legend VARCHAR(255), author VARCHAR(255), license VARCHAR(255), mime VARCHAR(63) NOT NULL, size INTEGER UNSIGNED, dimensions VARCHAR(15), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_media_folder (id INTEGER PRIMARY KEY AUTOINCREMENT, rel_path VARCHAR(255) NOT NULL UNIQUE, lft INTEGER, rgt INTEGER, level INTEGER);
CREATE TABLE dm_page_translation (id INTEGER, slug VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, title VARCHAR(255), h1 VARCHAR(255), description VARCHAR(255), keywords VARCHAR(255), auto_mod VARCHAR(6) DEFAULT 'snthdk' NOT NULL, is_active INTEGER DEFAULT '1' NOT NULL, is_secure INTEGER DEFAULT '0' NOT NULL, is_indexable INTEGER DEFAULT '1' NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE dm_page (id INTEGER PRIMARY KEY AUTOINCREMENT, module VARCHAR(127) NOT NULL, action VARCHAR(127) NOT NULL, record_id INTEGER UNSIGNED DEFAULT 0 NOT NULL, credentials VARCHAR(255), lft INTEGER, rgt INTEGER, level INTEGER);
CREATE TABLE dm_page_view (id INTEGER PRIMARY KEY AUTOINCREMENT, module VARCHAR(127) NOT NULL, action VARCHAR(127) NOT NULL, dm_layout_id INTEGER);
CREATE TABLE dm_permission (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) UNIQUE, description VARCHAR(5000), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_redirect (id INTEGER PRIMARY KEY AUTOINCREMENT, source VARCHAR(255) NOT NULL UNIQUE, dest VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_remember_key (dm_user_id INTEGER, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, PRIMARY KEY(ip_address));
CREATE TABLE dm_sent_mail (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255), header VARCHAR(60000), description VARCHAR(60000), created_at DATETIME NOT NULL);
CREATE TABLE dm_setting_translation (id INTEGER, description VARCHAR(255), value VARCHAR(60000), default_value VARCHAR(60000) DEFAULT NULL, lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE dm_setting (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(127) NOT NULL UNIQUE, type VARCHAR(255) DEFAULT 'text' NOT NULL, params VARCHAR(60000), group_name VARCHAR(255) DEFAULT '' NOT NULL, credentials VARCHAR(255));
CREATE TABLE dm_tag (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) NOT NULL UNIQUE);
CREATE TABLE dm_test_categ_translation (id INTEGER, name VARCHAR(255) NOT NULL, is_active INTEGER DEFAULT '1' NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE dm_test_categ (id INTEGER PRIMARY KEY AUTOINCREMENT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, position INTEGER);
CREATE TABLE dm_test_comment_version (id INTEGER, post_id INTEGER NOT NULL, author VARCHAR(255), body LONGTEXT, is_active INTEGER DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, version INTEGER, PRIMARY KEY(id, version));
CREATE TABLE dm_test_comment (id INTEGER PRIMARY KEY AUTOINCREMENT, post_id INTEGER NOT NULL, author VARCHAR(255), body LONGTEXT, is_active INTEGER DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, version INTEGER);
CREATE TABLE dm_test_domain_translation (id INTEGER, title VARCHAR(255) NOT NULL, is_active INTEGER DEFAULT '1' NOT NULL, lang CHAR(2), created_by INTEGER, updated_by INTEGER, PRIMARY KEY(id, lang));
CREATE TABLE dm_test_domain_dm_tag (id INTEGER, dm_tag_id INTEGER, PRIMARY KEY(id, dm_tag_id));
CREATE TABLE dm_test_domain (id INTEGER PRIMARY KEY AUTOINCREMENT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, position INTEGER);
CREATE TABLE dm_test_domain_categ (domain_id INTEGER, categ_id INTEGER, PRIMARY KEY(domain_id, categ_id));
CREATE TABLE dm_test_fruit_dm_tag (id INTEGER, dm_tag_id INTEGER, PRIMARY KEY(id, dm_tag_id));
CREATE TABLE dm_test_fruit (id INTEGER PRIMARY KEY AUTOINCREMENT, title VARCHAR(255), created_by INTEGER, updated_by INTEGER);
CREATE TABLE dm_test_post_translation_version (id INTEGER, lang CHAR(2), title VARCHAR(255) NOT NULL, excerpt VARCHAR(800), body LONGTEXT, url VARCHAR(255), is_active INTEGER DEFAULT '1' NOT NULL, version INTEGER, PRIMARY KEY(id, lang, version));
CREATE TABLE dm_test_post_translation (id INTEGER, title VARCHAR(255) NOT NULL, excerpt VARCHAR(800), body LONGTEXT, url VARCHAR(255), is_active INTEGER DEFAULT '1' NOT NULL, lang CHAR(2), version INTEGER, PRIMARY KEY(id, lang));
CREATE TABLE dm_test_post_dm_media (id INTEGER PRIMARY KEY AUTOINCREMENT, dm_media_id INTEGER NOT NULL, dm_record_id INTEGER NOT NULL, position INTEGER);
CREATE TABLE dm_test_post (id INTEGER PRIMARY KEY AUTOINCREMENT, categ_id INTEGER NOT NULL, user_id INTEGER NOT NULL, image_id INTEGER, file_id INTEGER, date DATE NOT NULL, created_by INTEGER, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, position INTEGER);
CREATE TABLE dm_test_post_tag (post_id INTEGER, tag_id INTEGER, PRIMARY KEY(post_id, tag_id));
CREATE TABLE dm_test_tag_translation (id INTEGER, name VARCHAR(255) NOT NULL, slug VARCHAR(255) NOT NULL UNIQUE, lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE dm_test_tag (id INTEGER PRIMARY KEY AUTOINCREMENT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_test_user (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255), description LONGTEXT, media_id INTEGER, is_visible INTEGER DEFAULT '0' NOT NULL);
CREATE TABLE dm_trans_unit (id INTEGER PRIMARY KEY AUTOINCREMENT, dm_catalogue_id INTEGER NOT NULL, source VARCHAR(60000) NOT NULL, target VARCHAR(60000) NOT NULL, meta VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_user (id INTEGER PRIMARY KEY AUTOINCREMENT, username VARCHAR(255) NOT NULL UNIQUE, email VARCHAR(255) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active INTEGER DEFAULT '1', is_super_admin INTEGER DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE dm_user_group (dm_user_id INTEGER, dm_group_id INTEGER, PRIMARY KEY(dm_user_id, dm_group_id));
CREATE TABLE dm_user_permission (dm_user_id INTEGER, dm_permission_id INTEGER, PRIMARY KEY(dm_user_id, dm_permission_id));
CREATE TABLE dm_widget_translation (id INTEGER, value VARCHAR(60000), lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE dm_widget (id INTEGER PRIMARY KEY AUTOINCREMENT, dm_zone_id INTEGER NOT NULL, module VARCHAR(127) NOT NULL, action VARCHAR(127) NOT NULL, css_class VARCHAR(255), position INTEGER, updated_at DATETIME NOT NULL);
CREATE TABLE dm_zone (id INTEGER PRIMARY KEY AUTOINCREMENT, dm_area_id INTEGER NOT NULL, css_class VARCHAR(255), width VARCHAR(15), position INTEGER);
CREATE UNIQUE INDEX dmAutoSeoModuleAction_idx ON dm_auto_seo (module, action);
CREATE UNIQUE INDEX dmLockIndex_idx ON dm_lock (user_id, module, action, record_id);
CREATE UNIQUE INDEX folderFile_idx ON dm_media (dm_media_folder_id, file);
CREATE UNIQUE INDEX recordModuleAction_idx ON dm_page (module, action, record_id);
CREATE UNIQUE INDEX dmPageViewModuleAction_idx ON dm_page_view (module, action);
CREATE UNIQUE INDEX record_dm_media_idx ON dm_test_post_dm_media (dm_record_id, dm_media_id);
CREATE INDEX is_active_idx_idx ON dm_user (is_active);
